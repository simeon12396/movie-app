{"version":3,"sources":["components/HeaderComp.js","helpers/requests.js","components/UpcomingMoviesComp.js","helpers/methodsAndHooks.js","layouts/ParticularMovies.js","components/NowPlayingMoviesComp.js","components/PopularMoviesComp.js","components/TopRatedMoviesComp.js","layouts/ParticularTvShows.js","components/PopularTvShowsComp.js","components/TopRatedTvShowsComp.js","components/OnTheAirTvShowsComp.js","pages/HomePage.js","layouts/AllParticularMovies.js","pages/AllNowPlayingMoviesPage.js","pages/AllTopRatedMoviesPage.js","pages/AllPopularMoviesPage.js","layouts/AllParticularTvShows.js","pages/AllPopularTvShowsPage.js","pages/AllTopRatedTvShowsPage.js","pages/AllOnTheAirTvShowsPage.js","pages/MoreInfoForEachMoviePage.js","pages/MoreInfoForEachTvShowPage.js","pages/SpecialPersonPage.js","pages/RegisterPage.js","pages/LoginPage.js","pages/FavoritePage.js","App.js","serviceWorker.js","index.js","images/user-image.png"],"names":["HeaderComp","isAuthenticated","localStorage","getItem","getFirstLetterFromUsername","JSON","parse","username","charAt","toUpperCase","handleLogout","removeItem","className","onClick","hamburger","document","querySelector","navMobile","classList","toggle","icon","faBars","faTimes","to","faHome","console","log","faHeart","faSignOutAlt","faUserPlus","faSignInAlt","useFetchDataFromTheMovieAPI","url","useState","moviesData","setData","moviesError","setMoviesError","useEffect","fetch","then","response","json","data","results","catch","error","useFetchPrimaryDataAboutMovie","primaryData","setPrimaryData","primaryError","setPrimaryError","useFetchCastAndCrewAboutMovie","staff","setStaff","staffError","setStaffError","useFetchKeywordsAboutMovie","keywords","setKeywords","keywordsError","setKeywordsError","useFetchSpecialPerson","setError","UpcomingMoviesComp","upcomingMovies","useFetchUpcomingMovies","eachMovie","map","movie","index","key","id","title","name","starCount","value","vote_average","color","vote_count","original_language","release_date","currentOverview","slicedOverview","slice","sliceText","overview","src","backdrop_path","alt","arrows","slidesToShow","slidesToScroll","autoplay","pauseOnHover","autoplaySpeed","infinite","speed","cssEase","dots","responsive","breakpoint","settings","ParticularMovies","props","movies","poster_path","faPlusCircle","typeOfMovies","routePath","NowPlayingMoviesComp","useFetchNowPlayingMovies","setItem","stringify","PopularMoviesComp","useFetchPopularMovies","TopRatedMoviesComp","useFetchTopRatedMovies","ParticularTvShows","tvShows","eachTvShow","show","original_name","typeOfTvShows","PopularTvShowsComp","useFetchPopularTvShows","TopRatedTvShowsComp","useFetchTopRatedTvShows","OnTheAirTvShowsComp","useFetchOnTheAirShows","HomePage","AllParticularMovies","allMovies","AllNowPlayingMoviesPage","getAllNowPlayingMovies","AllTopRatedMoviesPage","getAllTopRatedMovies","AllPopularMoviesPage","getAllPopularMovies","AllParticularTvShows","allTvShows","AllPopularTvShowsPage","getAllPopularTvShows","AllTopRatedTvShowsPage","getTopRatedTvShows","AllOnTheAirTvShowsPage","getOnTheAirTvShows","MoreInfoForEachMoviePage","sliderSettings","movieId","match","params","APIKey","primaryDataMovie","staffMovie","keywordsMovie","imageUrlApi","favoriteArray","eachKeyword","keyword","eachPersonFromCast","cast","castPerson","profile_path","character","eachPersonFromCrew","crew","crewPerson","job","OverlayTrigger","placement","overlay","Tooltip","text","movieData","imgURL","getLatestFavoriteItems","push","faPlay","href","homepage","target","rel","faLink","status","budget","revenue","runtime","popularity","MoreInfoFromEachTvShowPage","tvShowId","primaryDataTvShow","staffTvShow","keywordsTvShow","number_of_seasons","number_of_episodes","SpecialPersonPage","apiKey","personId","fetchPersonInformation","fetchPersonImages","currentPage","setCurrentPage","overlayImgUrl","setOverlayImgUrl","closeBtn","setCloseBtn","overlayImg","setOverlayImg","indexOfLastPhoto","indexOfFirstPhoto","currentPhotos","profiles","handleCoverOverlayImage","e","imgIndex","getAttribute","file_path","arrOfPages","eachPhoto","photo","img-url","i","Math","round","length","pullingArrOfPages","loopThroughPages","page","PageItem","knownAs","also_known_as","nickname","known_for_department","gender","birthday","deathday","place_of_birth","biography","Pagination","faWindowClose","RegisterPage","useForm","register","handleSubmit","errors","emptyRegisteredUsers","setEmptyRegisteredUsers","onSubmit","password","confirmPassword","alert","setTimeout","history","htmlFor","type","placeholder","ref","required","minLength","pattern","email","terms","LoginPage","registeredUsers","loginImage","FavoritePage","favorite","setFavorite","handleRemoveItem","currentId","forEach","item","splice","displayFavorite","bind","App","exact","path","component","MoreInfoForEachTvShowPage","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.88ab0c42.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../scss/components/HeaderComp.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHome, faUserPlus, faSignInAlt, faSignOutAlt, faHeart, faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HeaderComp = () => {\r\n    const isAuthenticated = localStorage.getItem('isAuthenticated');\r\n    \r\n    const getFirstLetterFromUsername = () => {\r\n        const authenticatedUsers = JSON.parse(localStorage.getItem('authenticatedUsers'));\r\n        const username = authenticatedUsers.username;\r\n        const firstLetter = username.charAt(0).toUpperCase();\r\n        \r\n        return firstLetter;\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('isAuthenticated');\r\n        localStorage.removeItem('authenticatedUsers');\r\n        localStorage.removeItem('favoriteList');\r\n    };\r\n\r\n    const handleFavoriteListItem = () => {\r\n        const favoriteListItem = document.querySelector('.header-li--favorite');\r\n        favoriteListItem.classList.toggle('header-li--favorite-active')\r\n        console.log('work')\r\n    };\r\n\r\n    const handleFavoriteListItemMobile = () => {\r\n        const favoriteListItem = document.querySelector('.header-nav-mobile .header-li--favorite');\r\n        favoriteListItem.classList.toggle('header-li--favorite-active')\r\n        console.log('work')\r\n    };\r\n\r\n    const handleHamburgerMenu = () => {\r\n        const hamburger = document.querySelector('.header-hamburger');\r\n        const navMobile = document.querySelector('.header-nav-mobile');\r\n\r\n        hamburger.classList.toggle('header-hamburger--change');\r\n        navMobile.classList.toggle('header-nav-mobile--change');\r\n    };\r\n\r\n    return (\r\n        <div className=\"header-comp\">\r\n            <header className=\"header\">\r\n                <div className=\"header-hamburger\" onClick={handleHamburgerMenu}>\r\n                    <FontAwesomeIcon icon={faBars} className=\"icons\" />\r\n\r\n                    <FontAwesomeIcon icon={faTimes} className=\"icons\" />\r\n                </div>\r\n\r\n                <nav className=\"header-nav\">\r\n                    <li className=\"header-li\">\r\n                        <Link to=\"/\">\r\n                            <FontAwesomeIcon icon={faHome} className=\"icons\" />\r\n                        </Link>\r\n                        <span className=\"header-tooltip\">Home</span>\r\n                    </li>\r\n\r\n                    {\r\n                        (isAuthenticated) ? \r\n                        (\r\n                            <div>\r\n                                <li className=\"header-li header-li--profile\" onClick={handleFavoriteListItem}>\r\n                                    <span>{getFirstLetterFromUsername()}</span>\r\n                                    <span className=\"header-tooltip\">Profile</span>\r\n                                </li>\r\n\r\n                                <li className=\"header-li header-li--favorite\">\r\n                                    <Link to=\"/user/favorite\">\r\n                                        <FontAwesomeIcon icon={faHeart} className=\"icons\" />\r\n                                        <span className=\"header-tooltip\">Favorite</span>\r\n                                    </Link>\r\n                                </li>\r\n\r\n                                <li className=\"header-li\">\r\n                                    <Link to=\"/\" onClick={handleLogout}>\r\n                                        <FontAwesomeIcon icon={faSignOutAlt} className=\"icons\" />\r\n                                        <span className=\"header-tooltip\">Logout</span>\r\n                                    </Link>\r\n                                </li>\r\n                            </div>\r\n                        ) : \r\n                        (\r\n                            <div>\r\n                                <li className=\"header-li\">\r\n                                    <Link to=\"/register\">\r\n                                        <FontAwesomeIcon icon={faUserPlus} className=\"icons\" />\r\n                                        <span className=\"header-tooltip\">Register</span>\r\n                                    </Link>\r\n                                </li>\r\n\r\n                                <li className=\"header-li\">\r\n                                    <Link to=\"/login\">\r\n                                        <FontAwesomeIcon icon={faSignInAlt} className=\"icons\" />\r\n                                        <span className=\"header-tooltip\">Login</span>\r\n                                    </Link>\r\n                                </li>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </nav>\r\n                \r\n                <nav className=\"header-nav-mobile\">\r\n                    <li className=\"header-li\">\r\n                        <Link to=\"/\">\r\n                            <FontAwesomeIcon icon={faHome} className=\"icons\" />\r\n                        </Link>\r\n                    </li>\r\n\r\n                    {\r\n                        (isAuthenticated) ? \r\n                        (\r\n                            <div>\r\n                                <li className=\"header-li header-li--profile\" onClick={handleFavoriteListItemMobile}>\r\n                                    <span>{getFirstLetterFromUsername()}</span>\r\n                                </li>\r\n\r\n                                <li className=\"header-li header-li--favorite\">\r\n                                    <Link to=\"/user/favorite\">\r\n                                        <FontAwesomeIcon icon={faHeart} className=\"icons\" />\r\n                                    </Link>\r\n                                </li>\r\n\r\n                                <li className=\"header-li\">\r\n                                    <Link to=\"/\" onClick={handleLogout}>\r\n                                        <FontAwesomeIcon icon={faSignOutAlt} className=\"icons\" />\r\n                                    </Link>\r\n                                </li>\r\n                            </div>\r\n                        ) : \r\n                        (\r\n                            <div>\r\n                                <li className=\"header-li\">\r\n                                    <Link to=\"/register\">\r\n                                        <FontAwesomeIcon icon={faUserPlus} className=\"icons\" />\r\n                                    </Link>\r\n                                </li>\r\n\r\n                                <li className=\"header-li\">\r\n                                    <Link to=\"/login\">\r\n                                        <FontAwesomeIcon icon={faSignInAlt} className=\"icons\" />\r\n                                    </Link>\r\n                                </li>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </nav>\r\n            </header>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default HeaderComp;","import {useState, useEffect} from 'react';\r\n\r\nexport const useFetchDataFromTheMovieAPI = (url) => {\r\n    const [moviesData, setData] = useState('');\r\n\r\n    const [moviesError, setMoviesError] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => setData(data.results))\r\n        .catch(error => setMoviesError(error));\r\n\r\n    }, [url]);\r\n\r\n    return (moviesError === '') ?  moviesData : moviesError;\r\n};\r\n\r\nexport const useFetchPrimaryDataAboutMovie = (url) => {\r\n    const [primaryData, setPrimaryData] = useState('');\r\n\r\n    const [primaryError, setPrimaryError] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => setPrimaryData(data))\r\n        .catch(error => setPrimaryError(error));\r\n    }, [url]);\r\n\r\n    return (primaryError === '') ? primaryData : primaryError;\r\n};\r\n\r\nexport const useFetchCastAndCrewAboutMovie = (url) => {\r\n    const [staff, setStaff] = useState('');\r\n\r\n    const [staffError, setStaffError] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => setStaff(data))\r\n        .catch(error => setStaffError(error));\r\n    }, [url]);\r\n\r\n    return (staffError === '') ? staff : staffError;\r\n};\r\n\r\nexport const useFetchKeywordsAboutMovie = (url) => {\r\n    const [keywords, setKeywords] = useState('');\r\n    \r\n    const [keywordsError, setKeywordsError] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => setKeywords(data))\r\n        .catch(error => setKeywordsError(error));\r\n    }, [url]);\r\n\r\n    return (keywordsError === '') ? keywords : keywordsError;\r\n};\r\n\r\nexport const useFetchSpecialPerson = (url) => {\r\n    const [data, setData] = useState('');\r\n\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => setData(data))\r\n        .catch(error => setError(error))\r\n    }, [url]);\r\n\r\n    return (error === '') ? data : error;\r\n}; \r\n","import React from 'react';\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport '../scss/components/UpcomingMovies.scss';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\nimport {useFetchDataFromTheMovieAPI as useFetchUpcomingMovies } from '../helpers/requests.js';\r\nimport {sliceText} from '../helpers/methodsAndHooks.js';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UpcomingMoviesComp = () => {\r\n\r\n    const settings = {\r\n        arrows: true,\r\n        slidesToShow: 2,\r\n        slidesToScroll: 1,\r\n        autoplay: true,\r\n        pauseOnHover: false,\r\n        autoplaySpeed: 9000,\r\n        infinite: true,\r\n        speed: 400,\r\n        cssEase: 'linear',\r\n        dots: false,\r\n        responsive: [\r\n            {\r\n                breakpoint: 768,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                    infinite: true,\r\n                    arrows: false\r\n                } \r\n            }\r\n        ]\r\n    };\r\n\r\n    const imageUrlApi = 'http://image.tmdb.org/t/p/original';\r\n\r\n    const upcomingMovies = useFetchUpcomingMovies('https://api.themoviedb.org/3/movie/upcoming?api_key=ce30a4e46c4adcde72216d273f3f7ba0&language=en-US&page=1');\r\n    \r\n    if(upcomingMovies) {\r\n        const eachMovie = upcomingMovies.map((movie, index) => {\r\n            return(\r\n                <div className=\"upcoming-comp\" key={index}>\r\n                    <div className=\"slide\">\r\n                        <div className=\"slide-details\">\r\n                            <Link to={`/movie/${movie.id}`}>\r\n                                <h3 className=\"slide-title\">{movie.title}</h3>\r\n                            </Link>\r\n                            \r\n                            <div className=\"slide-stars\">\r\n                                <StarRatingComponent\r\n                                    name=\"rating\"\r\n                                    starCount={6}\r\n                                    value={movie.vote_average}\r\n                                    color='blue'\r\n                                />\r\n        \r\n                                <span className=\"slide-reviews\">{movie.vote_count} Reviews</span>\r\n        \r\n                                <span className=\"slide-language\">{movie.original_language}</span>\r\n        \r\n                                <span className=\"slide-release\">{movie.release_date}</span>\r\n                            </div>\r\n        \r\n                            <Link to={`/movie/${movie.id}`}>\r\n                                <span className=\"slide-overview\">{sliceText(movie.overview)}</span>\r\n                            </Link>\r\n                        </div>\r\n    \r\n                        <img src={`${imageUrlApi}${movie.backdrop_path}`} className=\"slide-img\" alt=\"\" />\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return(\r\n            <div className=\"slider-comp upcoming-movies-comp\">\r\n                <Slider {...settings}>\r\n                    {eachMovie}\r\n                </Slider>\r\n            </div>\r\n        );\r\n\r\n    } else {\r\n        return null\r\n    };\r\n};\r\n\r\nexport default UpcomingMoviesComp;","export const sliceText = (currentOverview) => {\r\n    const slicedOverview = currentOverview.slice(0, 200);\r\n\r\n    const newOverview = `${slicedOverview}...`;\r\n\r\n    return newOverview;\r\n};\r\n","import React from 'react';\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport '../scss/components/ParticularMovies.scss';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ParticularMovies = (props) => {\r\n\r\n    const settings = {\r\n            arrows: true,\r\n            slidesToShow: 8,\r\n            slidesToScroll: 1,\r\n            autoplay: false,\r\n            pauseOnHover: false,\r\n            autoplaySpeed: 6000,\r\n            infinite: true,\r\n            speed: 400,\r\n            cssEase: 'linear',\r\n            dots: false,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1200,\r\n                    settings: {\r\n                        slidesToShow: 5,\r\n                        slidesToScroll: 1,\r\n                        infinite: true,\r\n                        arrows: false\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 992,\r\n                    settings: {\r\n                        slidesToShow: 4,\r\n                        slidesToScroll: 1,\r\n                        infinite: true,\r\n                        arrows: false\r\n                    } \r\n                },\r\n                {\r\n                    breakpoint: 768,\r\n                    settings: {\r\n                        slidesToShow: 3,\r\n                        slidesToScroll: 1,\r\n                        infinite: true,\r\n                        arrows: false\r\n                    } \r\n                },\r\n                {\r\n                    breakpoint: 576,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        slidesToScroll: 1,\r\n                        infinite: true,\r\n                        arrows: false\r\n                    } \r\n                }\r\n            ]\r\n        };\r\n\r\n        const imageUrlApi = 'http://image.tmdb.org/t/p/original';\r\n    \r\n        if(props.movies) {\r\n            const eachMovie = props.movies.map((movie, index) => {\r\n                return(\r\n                    <div className=\"each-movie\" key={index}>\r\n                        <img src={`${imageUrlApi}${movie.poster_path}`} alt=\"\"/>\r\n    \r\n                        <span className=\"each-movie-title\">{movie.title}</span>\r\n    \r\n                        <div className=\"each-movie-star\">\r\n                            <StarRatingComponent\r\n                                name=\"rating\"\r\n                                starCount={6}\r\n                                value={movie.vote_average}\r\n                                color='blue'\r\n                            />\r\n    \r\n                            <span className=\"each-movie-average\">{movie.vote_average}</span>\r\n                        </div>\r\n\r\n                        <Link to={`/movie/${movie.id}`} className=\"each-movie-overlay-effect\">\r\n                            <FontAwesomeIcon icon={faPlusCircle} className=\"icons\" />\r\n                        </Link>\r\n                    </div>\r\n                );\r\n            });\r\n    \r\n            return(\r\n                <div className=\"particular-movies-comp particular-movies\">\r\n                    <span className=\"particular-movies-heading\">{props.typeOfMovies}</span>\r\n    \r\n                      <Link to={props.routePath} className=\"particular-movies-explore\">Explore all</Link>\r\n    \r\n                    <Slider {...settings} className=\"particular-movies-slider\">\r\n                        {eachMovie}\r\n                    </Slider>\r\n                </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        };\r\n};\r\n\r\nexport default ParticularMovies;","import React from 'react';\r\nimport {useFetchDataFromTheMovieAPI as useFetchNowPlayingMovies} from '../helpers/requests.js';\r\nimport ParticularMovies from '../layouts/ParticularMovies.js';\r\n\r\nconst NowPlayingMoviesComp = () => {\r\n    const movies = useFetchNowPlayingMovies('https://api.themoviedb.org/3/movie/now_playing?api_key=ce30a4e46c4adcde72216d273f3f7ba0&language=en-US&page=1');\r\n\r\n    localStorage.setItem('nowPlayingMovies', JSON.stringify(movies));\r\n\r\n    return(\r\n        <div className=\"now-playing-movies-comp\">\r\n            <ParticularMovies movies={movies} typeOfMovies='Now Playing Movies' routePath='/category/now-playing-movies' />\r\n         </div>\r\n    );\r\n};\r\n\r\nexport default NowPlayingMoviesComp;","import React from 'react';\r\nimport {useFetchDataFromTheMovieAPI as useFetchPopularMovies} from '../helpers/requests.js';\r\nimport ParticularMovies from '../layouts/ParticularMovies.js';\r\n\r\nconst PopularMoviesComp = () => {\r\n\r\n    const movies = useFetchPopularMovies('https://api.themoviedb.org/3/movie/popular?api_key=ce30a4e46c4adcde72216d273f3f7ba0&language=en-US&page=1');\r\n\r\n    localStorage.setItem('popularMovies', JSON.stringify(movies));\r\n    \r\n    return(\r\n        <div className=\"popular-movies-comp\">\r\n            <ParticularMovies movies={movies} typeOfMovies='Popular Movies' routePath='/category/popular-movies'/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PopularMoviesComp;","import React from 'react';\r\nimport {useFetchDataFromTheMovieAPI as useFetchTopRatedMovies} from '../helpers/requests.js';\r\nimport ParticularMovies from '../layouts/ParticularMovies.js';\r\n\r\nconst TopRatedMoviesComp = () => {\r\n    const movies = useFetchTopRatedMovies('https://api.themoviedb.org/3/movie/top_rated?api_key=ce30a4e46c4adcde72216d273f3f7ba0&language=en-US&page=1');\r\n\r\n    localStorage.setItem('topRatedMovies', JSON.stringify(movies));\r\n\r\n    return(\r\n        <div className=\"top-rated-movies-comp\">\r\n            <ParticularMovies movies={movies} typeOfMovies='Top Rated Movies' routePath='/category/top-rated-movies'/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TopRatedMoviesComp;","import React from 'react';\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport '../scss/components/ParticularTVShows.scss';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ParticularTvShows = (props) => {\r\n    const settings = {\r\n        arrows: true,\r\n        slidesToShow: 8,\r\n        slidesToScroll: 1,\r\n        autoplay: true,\r\n        pauseOnHover: false,\r\n        autoplaySpeed: 6000,\r\n        infinite: true,\r\n        speed: 400,\r\n        cssEase: 'linear',\r\n        dots: false,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1200,\r\n                settings: {\r\n                    slidesToShow: 5,\r\n                    slidesToScroll: 1,\r\n                    infinite: true,\r\n                    arrows: false\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 992,\r\n                settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 1,\r\n                    infinite: true,\r\n                    arrows: false\r\n                } \r\n            },\r\n            {\r\n                breakpoint: 768,\r\n                settings: {\r\n                    slidesToShow: 3,\r\n                    slidesToScroll: 1,\r\n                    infinite: true,\r\n                    arrows: false\r\n                } \r\n            },\r\n            {\r\n                breakpoint: 576,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                    infinite: true,\r\n                    arrows: false\r\n                } \r\n            }\r\n        ]\r\n    };\r\n\r\n    const imageUrlApi = 'http://image.tmdb.org/t/p/original';\r\n    \r\n    if(props.tvShows) {\r\n        const eachTvShow = props.tvShows.map((show, index) => {\r\n            return(\r\n                <div className=\"each-tv-show\" key={index}>\r\n                    <img src={`${imageUrlApi}${show.poster_path}`} alt=\"\" />\r\n\r\n                    <span className=\"each-tv-show-title\">{show.original_name}</span>\r\n\r\n                    <div className=\"each-tv-show-star\">\r\n                        <StarRatingComponent\r\n                            name=\"rating\"\r\n                            starCount={6}\r\n                            value={show.vote_average}\r\n                            color='blue'\r\n                        />\r\n\r\n                        <span className=\"each-tv-show-average\">{show.vote_average}</span>\r\n                    </div>\r\n\r\n                    <Link to={`/tv-show/${show.id}`} className=\"each-tv-show-overlay-effect\">\r\n                        <FontAwesomeIcon icon={faPlusCircle} className=\"icons\" />\r\n                    </Link>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return(\r\n            <div className=\"particular-tv-shows-comp particular-tv-shows\">\r\n                <span className=\"particular-tv-shows-heading\">{props.typeOfTvShows}</span>\r\n\r\n                  <Link to={props.routePath} className=\"particular-tv-shows-explore\">Explore all</Link>\r\n\r\n                <Slider {...settings} className=\"particular-tv-shows-slider\">\r\n                    {eachTvShow}\r\n                </Slider>\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    };\r\n};\r\n\r\nexport default ParticularTvShows;","import React from 'react';\r\nimport {useFetchDataFromTheMovieAPI as useFetchPopularTvShows} from '../helpers/requests.js';\r\nimport ParticularTvShows from '../layouts/ParticularTvShows.js';\r\n\r\nconst PopularTvShowsComp = () => {\r\n    const tvShows = useFetchPopularTvShows('https://api.themoviedb.org/3/tv/popular?api_key=ce30a4e46c4adcde72216d273f3f7ba0&language=en-US&page=1');\r\n\r\n    localStorage.setItem('popularTvShows', JSON.stringify(tvShows));\r\n    \r\n    return(\r\n        <div className=\"popular-tv-shows-comp\">\r\n            <ParticularTvShows tvShows={tvShows} typeOfTvShows='Popular TV Shows' routePath='/category/popular-tv-shows' />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PopularTvShowsComp;","import React from 'react';\r\nimport {useFetchDataFromTheMovieAPI as useFetchTopRatedTvShows} from '../helpers/requests.js';\r\nimport ParticularTvShows from '../layouts/ParticularTvShows.js';\r\n\r\nconst TopRatedTvShowsComp = () => {\r\n    const tvShows = useFetchTopRatedTvShows('https://api.themoviedb.org/3/tv/top_rated?api_key=ce30a4e46c4adcde72216d273f3f7ba0&language=en-US&page=1')\r\n\r\n    localStorage.setItem('topRatedTvShows', JSON.stringify(tvShows));\r\n    \r\n    return(\r\n        <div className=\"top-rated-tv-shows-comp\">\r\n            <ParticularTvShows tvShows={tvShows} typeOfTvShows='Top Rated TV Shows' routePath='/category/top-rated-tv-shows' />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TopRatedTvShowsComp;","import React from 'react';\r\nimport {useFetchDataFromTheMovieAPI as useFetchOnTheAirShows} from '../helpers/requests.js';\r\nimport ParticularTvShows from '../layouts/ParticularTvShows.js';\r\n\r\nconst OnTheAirTvShowsComp = () => {\r\n    const tvShows = useFetchOnTheAirShows('https://api.themoviedb.org/3/tv/on_the_air?api_key=ce30a4e46c4adcde72216d273f3f7ba0&language=en-US&page=1');\r\n\r\n    localStorage.setItem('onTheAirTvShows', JSON.stringify(tvShows));\r\n\r\n    return(\r\n        <div className=\"on-the-air-tv-shows-comp\">\r\n            <ParticularTvShows tvShows={tvShows} typeOfTvShows='On The Air TV Shows' routePath=\"/category/on-the-air-tv-shows\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OnTheAirTvShowsComp;","import React from 'react';\r\nimport '../scss/pages/HomePage.scss';\r\nimport HeaderComp from '../components/HeaderComp.js';\r\nimport UpcomingMoviesComp from '../components/UpcomingMoviesComp.js';\r\nimport NowPlayingMoviesComp from '../components/NowPlayingMoviesComp.js';\r\nimport PopularMoviesComp from '../components/PopularMoviesComp.js';\r\nimport TopRatedMoviesComp from '../components/TopRatedMoviesComp.js';\r\nimport PopularTvShowsComp from '../components/PopularTvShowsComp.js'\r\nimport TopRatedTvShowsComp from '../components/TopRatedTvShowsComp.js';\r\nimport OnTheAirTvShowsComp from '../components/OnTheAirTvShowsComp.js';\r\nimport ScrollUpButton from \"react-scroll-up-button\";\r\n\r\nconst HomePage = () => {\r\n\r\n    return(\r\n        <div className='home-page'>\r\n            <HeaderComp/>\r\n            \r\n            <main>\r\n                <UpcomingMoviesComp/>\r\n                \r\n                <div className=\"out-focus container-fluid\">\r\n                    <NowPlayingMoviesComp/>\r\n                    <TopRatedMoviesComp/>\r\n                    <PopularMoviesComp/>\r\n                    <PopularTvShowsComp/>\r\n                    <TopRatedTvShowsComp/>\r\n                    <OnTheAirTvShowsComp/>\r\n                </div>\r\n            </main>\r\n\r\n            <ScrollUpButton />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport HeaderComp from '../components/HeaderComp.js';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport '../scss/components/AllParticularMovies.scss';\r\nimport { Link } from \"react-router-dom\";\r\nimport ScrollUpButton from \"react-scroll-up-button\";\r\n\r\nconst AllParticularMovies = (props) => {\r\n\r\n    const imageUrlApi = 'http://image.tmdb.org/t/p/original';\r\n   \r\n        if(props.allMovies) {\r\n            const eachMovie = props.allMovies.map((movie, index) => {\r\n                return(\r\n                    <div className=\"each-movie\" key={index}>\r\n                        <img src={`${imageUrlApi}${movie.poster_path}`} alt=\"\"/>\r\n    \r\n                        <span className=\"each-movie-title\">{movie.title}</span>\r\n    \r\n                        <div className=\"each-movie-star\">\r\n                            <StarRatingComponent\r\n                                name=\"rating\"\r\n                                starCount={6}\r\n                                value={movie.vote_average}\r\n                                color='blue'\r\n                            />\r\n    \r\n                            <span className=\"each-movie-average\">{movie.vote_average}</span>\r\n                        </div>\r\n\r\n                        <Link to={`/movie/${movie.id}`} className=\"each-movie-overlay-effect\">\r\n                            <FontAwesomeIcon icon={faPlusCircle} className=\"icons\" />\r\n                        </Link>\r\n\r\n                        <ScrollUpButton/>\r\n                    </div>\r\n                );\r\n            });\r\n\r\n            return(\r\n                <div className=\"all-particular-movies\">\r\n                    <HeaderComp/>\r\n        \r\n                    <main>\r\n                        {eachMovie}\r\n                    </main>\r\n                </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        };\r\n};\r\n\r\nexport default AllParticularMovies;","import React from 'react';\r\nimport AllParticularMovies from '../layouts/AllParticularMovies.js';\r\n\r\nconst AllNowPlayingMoviesPage = () => {\r\n    const getAllNowPlayingMovies = JSON.parse(localStorage.getItem('nowPlayingMovies'));\r\n\r\n    return(\r\n        <div className=\"all-now-playing-movies-page\">\r\n            <AllParticularMovies allMovies={getAllNowPlayingMovies} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AllNowPlayingMoviesPage;","import React from 'react';\r\nimport AllParticularMovies from '../layouts/AllParticularMovies.js';\r\n\r\nconst AllTopRatedMoviesPage = () => {\r\n    const getAllTopRatedMovies = JSON.parse(localStorage.getItem('topRatedMovies'));\r\n\r\n    return(\r\n        <div className=\"all-top-rated-movies-page\">\r\n            <AllParticularMovies allMovies={getAllTopRatedMovies} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AllTopRatedMoviesPage;","import React from 'react';\r\nimport AllParticularMovies from '../layouts/AllParticularMovies.js';\r\n\r\nconst AllPopularMoviesPage = () => {\r\n\r\n    const getAllPopularMovies = JSON.parse(localStorage.getItem('popularMovies'));\r\n\r\n    return(\r\n        <div className=\"all-top-rated-movies-page\">\r\n            <AllParticularMovies allMovies={getAllPopularMovies} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AllPopularMoviesPage;","import React from 'react';\r\nimport HeaderComp from '../components/HeaderComp.js';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport '../scss/components/AllParticularTvShows.scss';\r\nimport { Link } from \"react-router-dom\";\r\nimport ScrollUpButton from \"react-scroll-up-button\";\r\n\r\nconst AllParticularTvShows = (props) => {\r\n\r\n    const imageUrlApi = 'http://image.tmdb.org/t/p/original';\r\n\r\n        if(props.allTvShows) {\r\n            const eachTvShow = props.allTvShows.map((show, index) => {\r\n                return(\r\n                    <div className=\"each-show\" key={index}>\r\n                        <img src={`${imageUrlApi}${show.poster_path}`} alt=\"\" />\r\n    \r\n                        <span className=\"each-show-title\">{show.original_name}</span>\r\n    \r\n                        <div className=\"each-show-star\">\r\n                            <StarRatingComponent\r\n                                name=\"rating\"\r\n                                starCount={6}\r\n                                value={show.vote_average}\r\n                                color='blue'\r\n                            />\r\n    \r\n                            <span className=\"each-show-average\">{show.vote_average}</span>\r\n                        </div>\r\n\r\n                        <Link to={`/tv-show/${show.id}`} className=\"each-show-overlay-effect\">\r\n                            <FontAwesomeIcon icon={faPlusCircle} className=\"icons\" />\r\n                        </Link>\r\n\r\n                        <ScrollUpButton/>\r\n                    </div>\r\n                );\r\n            });\r\n\r\n            return(\r\n                <div className=\"all-particular-tv-shows\">\r\n                    <HeaderComp/>\r\n        \r\n                    <main>\r\n                        {eachTvShow}\r\n                    </main>\r\n                </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        };\r\n};\r\n\r\nexport default AllParticularTvShows","import React from 'react';\r\nimport AllParticularTvShows from '../layouts/AllParticularTvShows.js';\r\n\r\nconst AllPopularTvShowsPage = () => {\r\n    const getAllPopularTvShows = JSON.parse(localStorage.getItem('popularTvShows'));\r\n\r\n    return(\r\n        <div>\r\n            <AllParticularTvShows allTvShows={getAllPopularTvShows} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AllPopularTvShowsPage;","import React from 'react';\r\nimport AllParticularTvShows from '../layouts/AllParticularTvShows.js';\r\n\r\nconst AllTopRatedTvShowsPage = () => {\r\n    const getTopRatedTvShows = JSON.parse(localStorage.getItem('topRatedTvShows'));\r\n\r\n    return(\r\n        <div>\r\n            <AllParticularTvShows allTvShows={getTopRatedTvShows} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AllTopRatedTvShowsPage;","import React from 'react';\r\nimport AllParticularTvShows from '../layouts/AllParticularTvShows.js';\r\n\r\nconst AllOnTheAirTvShowsPage = () => {\r\n\r\n    const getOnTheAirTvShows = JSON.parse(localStorage.getItem('onTheAirTvShows'));\r\n\r\n    return(\r\n        <div>\r\n            <AllParticularTvShows allTvShows={getOnTheAirTvShows} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AllOnTheAirTvShowsPage;","import React from 'react';\r\nimport HeaderComp from '../components/HeaderComp.js';\r\nimport {useFetchPrimaryDataAboutMovie, useFetchCastAndCrewAboutMovie ,useFetchKeywordsAboutMovie} from '../helpers/requests.js';\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart, faPlay, faLink } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport '../scss/pages/MoreInfoForEachMoviePage.scss';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MoreInfoForEachMoviePage = (props) => {\r\n\r\n    const sliderSettings = {\r\n        arrows: false,\r\n        slidesToShow: 4,\r\n        slidesToScroll: 1,\r\n        autoplay: true,\r\n        pauseOnHover: false,\r\n        autoplaySpeed: 6000,\r\n        infinite: true,\r\n        speed: 400,\r\n        cssEase: 'linear',\r\n        dots: false,\r\n        responsive: [\r\n            {\r\n                breakpoint: 576,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                    infinite: true,\r\n                    arrows: false\r\n                } \r\n            }\r\n        ]\r\n    };\r\n\r\n    const movieId = props.match.params.id;\r\n\r\n    const APIKey = 'ce30a4e46c4adcde72216d273f3f7ba0';\r\n\r\n    const primaryDataMovie = useFetchPrimaryDataAboutMovie(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKey}&language=en-US`);\r\n    \r\n    const staffMovie = useFetchCastAndCrewAboutMovie(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${APIKey}`);\r\n    \r\n    const keywordsMovie = useFetchKeywordsAboutMovie(`https://api.themoviedb.org/3/movie/${movieId}/keywords?api_key=${APIKey}`)\r\n    \r\n    const imageUrlApi = 'http://image.tmdb.org/t/p/original';\r\n    \r\n    let favoriteArray = [];\r\n\r\n    const handleAddToFavorite = () => {\r\n        let movieData = {...primaryDataMovie, imgURL: imageUrlApi };\r\n        const getLatestFavoriteItems = JSON.parse(localStorage.getItem('favorite'));\r\n        favoriteArray = [...getLatestFavoriteItems];\r\n        favoriteArray.push(movieData);\r\n        localStorage.setItem('favorite', JSON.stringify(favoriteArray))\r\n    };\r\n\r\n    if(primaryDataMovie && staffMovie && keywordsMovie) {\r\n\r\n        const eachKeyword = keywordsMovie.keywords.map((keyword, index) => {\r\n            return(\r\n                <span key={index}>{keyword.name}</span>\r\n            );\r\n        });\r\n\r\n        const eachPersonFromCast = staffMovie.cast.map((castPerson, index) => {\r\n            if(castPerson.profile_path !== null) {\r\n                return(\r\n                    <div className=\"movie-staff-container\" key={index}>\r\n                        <Link to={`/person/${castPerson.id}`}>\r\n                            <img src={`${imageUrlApi}${castPerson.profile_path}`} className=\"movie-img-cast\" alt=\"\" />\r\n                        </Link>\r\n                        <p className=\"movie-name\">{castPerson.name}</p>\r\n                        <p className=\"movie-role\">{castPerson.character}</p>\r\n                    </div>  \r\n                );\r\n            } else {\r\n                return null;\r\n            };\r\n        });\r\n\r\n        const eachPersonFromCrew = staffMovie.crew.map((crewPerson, index) => {\r\n            if(crewPerson.profile_path !== null) {\r\n                return(\r\n                    <div className=\"movie-staff-container\" key={index}>\r\n                        <Link to={`/person/${crewPerson.id}`}>\r\n                            <img src={`${imageUrlApi}${crewPerson.profile_path}`} className=\"movie-img-cast\" alt=\"\" />\r\n                        </Link>\r\n                        <p className=\"movie-name\">{crewPerson.name}</p>\r\n                        <p className=\"movie-job\">{crewPerson.job}</p>\r\n                    </div>  \r\n                );\r\n            } else {\r\n                return null;\r\n            };\r\n        });\r\n\r\n        return(\r\n            <div className=\"more-info-page\">\r\n                <HeaderComp/>\r\n                \r\n                <main>\r\n                    <div className=\"movie container\">\r\n                        <img src={`${imageUrlApi}${primaryDataMovie.poster_path}`} className=\"movie-img\" alt=\"\" />\r\n                        \r\n                        <div className=\"movie-description\">\r\n                            <h3>{primaryDataMovie.title}</h3>\r\n                            \r\n                            <div className=\"movie-buttons\">\r\n                                <OverlayTrigger\r\n                                    placement='bottom'\r\n                                    overlay={<Tooltip id='tooltip-user-score'>User score</Tooltip>}\r\n                                >\r\n                                    <div className=\"movie-score-cnt\">\r\n                                        <CircularProgressbar value={`${primaryDataMovie.vote_average * 10}`} text={`${primaryDataMovie.vote_average * 10}%`} className=\"movie-score\" />\r\n                                    </div>\r\n                                </OverlayTrigger>\r\n                                \r\n                                <OverlayTrigger\r\n                                    placement='bottom'\r\n                                    overlay={<Tooltip id='tooltip-add-to-favorite'>Add to favorite </Tooltip>}\r\n                                >\r\n                                    <button className=\"movie-add-to-favorite\" onClick={handleAddToFavorite}>\r\n                                        <FontAwesomeIcon icon={faHeart} className=\"icons\" />\r\n                                    </button>\r\n                                </OverlayTrigger>\r\n\r\n                                <OverlayTrigger\r\n                                    placement='bottom'\r\n                                    overlay={<Tooltip id='tooltip-watch-trailer'>Watch trailer</Tooltip>}\r\n                                >\r\n                                    <button className=\"movie-play\">\r\n                                        <FontAwesomeIcon icon={faPlay} className=\"icons\" />\r\n                                    </button>\r\n                                </OverlayTrigger>\r\n\r\n                                <OverlayTrigger\r\n                                    placement='bottom'\r\n                                    overlay={<Tooltip>Go to official site</Tooltip>}\r\n                                >\r\n                                    <a href={primaryDataMovie.homepage} target=\"_blank\" className=\"movie-homepage\" rel=\"noopener noreferrer\">\r\n                                        <FontAwesomeIcon icon={faLink} className=\"icons\" />\r\n                                    </a>\r\n                                </OverlayTrigger>\r\n                            </div>\r\n\r\n                            <h4>Overview</h4>\r\n\r\n                            <p>{primaryDataMovie.overview}</p>\r\n\r\n                            <div className=\"movie-details\">\r\n                                <div className=\"item\">\r\n                                    <h5>Status</h5>\r\n\r\n                                    <p>{primaryDataMovie.status}</p>\r\n                                </div>\r\n\r\n                                <div className=\"item\">\r\n                                    <h5>Budget</h5>\r\n\r\n                                    <p>{`$${primaryDataMovie.budget}`}</p>\r\n                                </div>\r\n\r\n                                <div className=\"item\">\r\n                                    <h5>Revenue</h5>\r\n\r\n                                    <p>{`$${primaryDataMovie.revenue}`}</p>\r\n                                </div>\r\n\r\n                                <div className=\"item\">\r\n                                    <h5>Runtime</h5>\r\n\r\n                                    <p>{`${primaryDataMovie.runtime} min`}</p>\r\n                                </div>\r\n\r\n                                <div className=\"item\">\r\n                                    <h5>Popularity</h5>\r\n\r\n                                    <p>{`${primaryDataMovie.popularity}`}</p>\r\n                                </div>\r\n\r\n                                <div className=\"item\">\r\n                                    <h5>Original language</h5>\r\n\r\n                                    <p className=\"movie-langauge\">{`${primaryDataMovie.original_language}`}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"movie-keywords\">\r\n                                <h5>Keywords</h5>\r\n\r\n                                <div className=\"movie-keywords-cnt\">\r\n                                    {eachKeyword}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Tabs className=\"container\">\r\n                        <TabList>\r\n                            <Tab>Cast</Tab>\r\n                            <Tab>Crew</Tab>\r\n                        </TabList>\r\n\r\n                        <TabPanel>\r\n                            <Slider {...sliderSettings} className=\"movie-cast-slider\">\r\n                                {eachPersonFromCast}\r\n                            </Slider>\r\n                        </TabPanel>\r\n\r\n                        <TabPanel>\r\n                            <Slider {...sliderSettings} className=\"movie-cast-slider\">\r\n                                {eachPersonFromCrew}\r\n                            </Slider>\r\n                        </TabPanel>\r\n                    </Tabs>\r\n                </main>\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    };\r\n};\r\n\r\nexport default MoreInfoForEachMoviePage;","import React from 'react';\r\nimport HeaderComp from '../components/HeaderComp.js';\r\nimport {useFetchPrimaryDataAboutMovie, useFetchCastAndCrewAboutMovie ,useFetchKeywordsAboutMovie} from '../helpers/requests.js';\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart, faPlay, faLink } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport '../scss/pages/MoreInfoForEachTvShowPage.scss';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MoreInfoFromEachTvShowPage = (props) => {\r\n    const sliderSettings = {\r\n        arrows: false,\r\n        slidesToShow: 5,\r\n        slidesToScroll: 5,\r\n        autoplay: true,\r\n        pauseOnHover: true,\r\n        autoplaySpeed: 6000,\r\n        infinite: false,\r\n        speed: 400,\r\n        cssEase: 'linear',\r\n        dots: false\r\n    };\r\n\r\n    const tvShowId = props.match.params.id;\r\n\r\n    const APIKey = 'ce30a4e46c4adcde72216d273f3f7ba0';\r\n\r\n    const primaryDataTvShow = useFetchPrimaryDataAboutMovie(`https://api.themoviedb.org/3/tv/${tvShowId}?api_key=${APIKey}&language=en-US`);\r\n\r\n    const staffTvShow = useFetchCastAndCrewAboutMovie(`https://api.themoviedb.org/3/tv/${tvShowId}/credits?api_key=${APIKey}&language=en-US`);\r\n\r\n    const keywordsTvShow = useFetchKeywordsAboutMovie(`https://api.themoviedb.org/3/tv/${tvShowId}/keywords?api_key=${APIKey}`)\r\n\r\n    const imageUrlApi = 'http://image.tmdb.org/t/p/original';\r\n\r\n    let favoriteArray = [];\r\n\r\n    const handleAddToFavorite = () => {\r\n        let movieData = {...primaryDataTvShow, imgURL: imageUrlApi };\r\n        const getLatestFavoriteItems = JSON.parse(localStorage.getItem('favorite'));\r\n        favoriteArray = [...getLatestFavoriteItems];\r\n        favoriteArray.push(movieData);\r\n        localStorage.setItem('favorite', JSON.stringify(favoriteArray))\r\n    };\r\n\r\n    if(primaryDataTvShow && staffTvShow && keywordsTvShow) {\r\n\r\n        const eachKeyword = keywordsTvShow.results.map((keyword, index) => {\r\n            return(\r\n                <span key={index}>{keyword.name}</span>\r\n            );\r\n        });\r\n\r\n        const eachPersonFromCast = staffTvShow.cast.map((castPerson, index) => {\r\n            if(castPerson.profile_path !== null) {\r\n                return(\r\n                    <div className=\"tv-show-staff-container\" key={index}>\r\n                        <Link to={`/person/${castPerson.id}`}>\r\n                            <img src={`${imageUrlApi}${castPerson.profile_path}`} className=\"tv-show-img-cast\" alt=\"\" />\r\n                        </Link>\r\n                        <p className=\"tv-show-name\">{castPerson.name}</p>\r\n                        <p className=\"tv-show-role\">{castPerson.character}</p>\r\n                    </div>  \r\n                );\r\n            } else {\r\n                return null;\r\n            };\r\n        });\r\n\r\n        const eachPersonFromCrew = staffTvShow.crew.map((crewPerson, index) => {\r\n            if(crewPerson.profile_path !== null) {\r\n                return(\r\n                    <div className=\"tv-show-staff-container\" key={index}>\r\n                        <Link to={`/person/${crewPerson.id}`}>\r\n                            <img src={`${imageUrlApi}${crewPerson.profile_path}`} className=\"tv-show-img-cast\" alt=\"\" />\r\n                        </Link>\r\n                        <p className=\"tv-show-name\">{crewPerson.name}</p>\r\n                        <p className=\"tv-show-job\">{crewPerson.job}</p>\r\n                    </div>  \r\n                );\r\n            } else {\r\n                return null;\r\n            };\r\n        });\r\n\r\n        return(\r\n            <div className=\"more-info-page\">\r\n                <HeaderComp/>\r\n                \r\n                <main>\r\n                    <div className=\"tv-show container\">\r\n                        <img src={`${imageUrlApi}${primaryDataTvShow.poster_path}`} className=\"tv-show-img\" alt=\"\" />\r\n                        \r\n                        <div className=\"tv-show-description\">\r\n                            <h3>{primaryDataTvShow.title}</h3>\r\n                            \r\n                            <div className=\"tv-show-buttons\">\r\n                                <OverlayTrigger\r\n                                    placement='bottom'\r\n                                    overlay={<Tooltip id='tooltip-user-score'>User score</Tooltip>}\r\n                                >\r\n                                    <div className=\"tv-show-score-cnt\">\r\n                                        <CircularProgressbar value={`${primaryDataTvShow.vote_average * 10}`} text={`${primaryDataTvShow.vote_average * 10}%`} className=\"tv-showscore\" />\r\n                                    </div>\r\n                                </OverlayTrigger>\r\n                                \r\n                                <OverlayTrigger\r\n                                    placement='bottom'\r\n                                    overlay={<Tooltip id='tooltip-add-to-favorite'>Add to favorite </Tooltip>}\r\n                                >\r\n                                    <button className=\"tv-show-add-to-favorite\" onClick={handleAddToFavorite}>\r\n                                        <FontAwesomeIcon icon={faHeart} className=\"icons\" />\r\n                                    </button>\r\n                                </OverlayTrigger>\r\n\r\n                                <OverlayTrigger\r\n                                    placement='bottom'\r\n                                    overlay={<Tooltip id='tooltip-watch-trailer'>Watch trailer</Tooltip>}\r\n                                >\r\n                                    <button className=\"tv-show-play\">\r\n                                        <FontAwesomeIcon icon={faPlay} className=\"icons\" />\r\n                                    </button>\r\n                                </OverlayTrigger>\r\n\r\n                                <OverlayTrigger\r\n                                    placement='bottom'\r\n                                    overlay={<Tooltip>Go to official site</Tooltip>}\r\n                                >\r\n                                    <a href={primaryDataTvShow.homepage} target=\"_blank\" className=\"tv-show-homepage\" rel=\"noopener noreferrer\">\r\n                                        <FontAwesomeIcon icon={faLink} className=\"icons\" />\r\n                                    </a>\r\n                                </OverlayTrigger>\r\n                            </div>\r\n\r\n                            <h4>Overview</h4>\r\n\r\n                            <p>{primaryDataTvShow.overview}</p>\r\n\r\n                            <div className=\"tv-show-details\">\r\n                                <div className=\"item\">\r\n                                    <h5>Status</h5>\r\n\r\n                                    <p>{primaryDataTvShow.status}</p>\r\n                                </div>\r\n\r\n                                <div className=\"item\">\r\n                                    <h5>Popularity</h5>\r\n\r\n                                    <p>{`${primaryDataTvShow.popularity}`}</p>\r\n                                </div>\r\n\r\n                                <div className=\"item\">\r\n                                    <h5>Original language</h5>\r\n\r\n                                    <p className=\"tv-show-langauge\">{`${primaryDataTvShow.original_language}`}</p>\r\n                                </div>\r\n\r\n                                <div className=\"item\">\r\n                                    <h5>Seasons</h5>\r\n\r\n                                    <p className=\"tv-show-seasons\">{`${primaryDataTvShow.number_of_seasons}`}</p>\r\n                                </div>\r\n\r\n                                <div className=\"item\">\r\n                                    <h5>Episodes</h5>\r\n\r\n                                    <p className=\"tv-show-episodes\">{`${primaryDataTvShow.number_of_episodes}`}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"tv-show-keywords\">\r\n                                <h5>Keywords</h5>\r\n\r\n                                <div className=\"tv-show-keywords-cnt\">\r\n                                    {eachKeyword}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Tabs className=\"container\">\r\n                        <TabList>\r\n                            <Tab>Cast</Tab>\r\n                            <Tab>Crew</Tab>\r\n                        </TabList>\r\n\r\n                        <TabPanel>\r\n                            <Slider {...sliderSettings} className=\"tv-show-cast-slider\">\r\n                                {eachPersonFromCast}\r\n                            </Slider>\r\n                        </TabPanel>\r\n\r\n                        <TabPanel>\r\n                            <Slider {...sliderSettings} className=\"tv-show-cast-slider\">\r\n                                {eachPersonFromCrew}\r\n                            </Slider>\r\n                        </TabPanel>\r\n                    </Tabs>\r\n                </main>\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    };\r\n};\r\n\r\nexport default MoreInfoFromEachTvShowPage;","import React, {useState} from 'react';\r\nimport HeaderComp from '../components/HeaderComp.js';\r\nimport '../scss/pages/SpecialPerson.scss';\r\nimport {useFetchSpecialPerson} from '../helpers/requests.js';\r\nimport Pagination from 'react-bootstrap/Pagination';\r\nimport PageItem from 'react-bootstrap/PageItem';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ScrollUpButton from \"react-scroll-up-button\";\r\n\r\nconst SpecialPersonPage = (props) => {\r\n    const apiKey = 'ce30a4e46c4adcde72216d273f3f7ba0';\r\n    const personId = props.match.params.id;\r\n    const imageUrlApi = 'http://image.tmdb.org/t/p/original';\r\n    const fetchPersonInformation = useFetchSpecialPerson(`https://api.themoviedb.org/3/person/${personId}?api_key=${apiKey}&language=en-US`);\r\n    const fetchPersonImages = useFetchSpecialPerson(`https://api.themoviedb.org/3/person/${personId}/images?api_key=${apiKey}`);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [overlayImgUrl, setOverlayImgUrl] = useState('');\r\n    const [closeBtn, setCloseBtn] = useState(false);\r\n    const [overlayImg, setOverlayImg] = useState(false);\r\n\r\n    if(fetchPersonInformation && fetchPersonImages) {\r\n\r\n        const photosPerPage = 8;\r\n        const indexOfLastPhoto = currentPage * photosPerPage;\r\n        const indexOfFirstPhoto = indexOfLastPhoto - photosPerPage;\r\n        const currentPhotos = fetchPersonImages.profiles.slice(indexOfFirstPhoto, indexOfLastPhoto);\r\n        \r\n        const handleCoverOverlayImage =  (e) => {\r\n            const imgIndex = e.target.getAttribute('img-url');\r\n            const overlayImgUrl = `${imageUrlApi}${currentPhotos[imgIndex].file_path}`;\r\n            setOverlayImgUrl(overlayImgUrl);\r\n            setOverlayImg(true);\r\n            setCloseBtn(true);\r\n        };\r\n\r\n        const handleCloseOverlayImg = () => {\r\n            setOverlayImg(false);\r\n            setCloseBtn(false);\r\n        };\r\n\r\n        const arrOfPages = [];\r\n\r\n        const eachPhoto = currentPhotos.map((photo, index) => {\r\n            return(\r\n                <img src={`${imageUrlApi}${photo.file_path}`} key={index} onClick={handleCoverOverlayImage} img-url={index} alt=\"\"/>\r\n            );\r\n        });\r\n\r\n        const pullingArrOfPages = () => {\r\n            for(let i = 1; i <= Math.round(fetchPersonImages.profiles.length / photosPerPage); i++) {\r\n                arrOfPages.push(i);\r\n            };\r\n        };\r\n\r\n        pullingArrOfPages();\r\n\r\n        const loopThroughPages = arrOfPages.map((page, index) => {\r\n            return(\r\n                <PageItem key={index} onClick={() => {setCurrentPage(page)}}>{page}</PageItem>\r\n            );\r\n        });\r\n\r\n        const knownAs = fetchPersonInformation.also_known_as.map((nickname, index) => {\r\n            return(\r\n                <span key={index} className=\"person-nickname\">{nickname}</span>\r\n            );\r\n        });\r\n    \r\n        const genderType = () => (fetchPersonInformation.gender === 2) ? (<span>Male</span>) : (<span>Female</span>);\r\n\r\n        const hasDeathDay = () => (fetchPersonInformation.deathday === null) ? (<span>-</span>) : (<span>{fetchPersonInformation.deathday}</span>);\r\n        \r\n        return(\r\n            <div className=\"special-person-page\">\r\n                <HeaderComp/>\r\n\r\n                <main>\r\n                    <div className=\"person container\">\r\n                        <div className=\"person-left-side\">\r\n                            <img src={`${imageUrlApi}${fetchPersonInformation.profile_path}`} className=\"person-img\" alt=\"\" />\r\n\r\n                            <h3>Personal Info</h3>\r\n\r\n                            <div className=\"person-boxes-container\">\r\n                                <div className=\"person-box\">\r\n                                    <h5>Known for</h5>\r\n                                    <span>{fetchPersonInformation.known_for_department}</span>\r\n                                </div>\r\n\r\n                                <div className=\"person-box\">\r\n                                    <h5>Gender</h5>\r\n                                {genderType()}\r\n                                </div>\r\n\r\n                                <div className=\"person-box\">\r\n                                    <h5>Also known as</h5>\r\n                                    <div className=\"person-nicknames-flex\">\r\n                                    {knownAs}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"box\">\r\n                                    <h5>Birthday</h5>\r\n                                    <span>{fetchPersonInformation.birthday}</span>\r\n                                </div>\r\n\r\n                                <div className=\"box\">\r\n                                    <h5>Death day</h5>\r\n                                    {hasDeathDay()}\r\n                                </div>\r\n\r\n                                <div className=\"box\">\r\n                                    <h5>Place of birthday</h5>\r\n                                    <span>{fetchPersonInformation.place_of_birth}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"person-right-side\">\r\n                            <h3>{fetchPersonInformation.name}</h3>\r\n                            <p>{fetchPersonInformation.biography}</p>\r\n\r\n                            <div className=\"person-photos\">\r\n                                <h3>Photos</h3>\r\n\r\n                                <div className=\"person-photos-flex\">\r\n                                    {eachPhoto}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"person-pagination mt-2\">\r\n                                <Pagination className=\"flex justify-content-center\">\r\n                                    {loopThroughPages}\r\n                                </Pagination>\r\n                            </div>\r\n\r\n                            <div className=\"person-img-overlay\">\r\n                                {\r\n                                    (overlayImg && <img src={overlayImgUrl} className=\"person-overlay-img\" alt=\"\" />)\r\n                                }\r\n                                \r\n                               {\r\n                                    (closeBtn && <FontAwesomeIcon icon={faWindowClose} className=\"icons person-close\" onClick={handleCloseOverlayImg}/>)\r\n                               }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n\r\n                <ScrollUpButton/>\r\n            </div>\r\n        )\r\n    } else {\r\n        return null;\r\n    };\r\n};\r\n\r\nexport default SpecialPersonPage;","import React, {useState} from 'react';\r\nimport HeaderComp from '../components/HeaderComp.js';\r\nimport '../scss/pages/RegisterPage.scss';\r\nimport { Link } from \"react-router-dom\";\r\nimport useForm from 'react-hook-form';\r\n\r\nconst RegisterPage = (props) => {\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const [emptyRegisteredUsers, setEmptyRegisteredUsers] = useState(false);\r\n\r\n    const onSubmit = data => {\r\n        const password = data.password;\r\n        const confirmPassword = data.confirmPassword;\r\n\r\n        if(password === confirmPassword) {\r\n            if(emptyRegisteredUsers) {\r\n                localStorage.setItem('registeredUsers', JSON.stringify(data));\r\n                alert('Your account have been created!')\r\n                setTimeout(props.history.push('/login'), 2000);\r\n            } else {\r\n                localStorage.setItem('registeredUsers', JSON.stringify(data));\r\n                setEmptyRegisteredUsers(true); \r\n            }\r\n        } else {\r\n            alert('The form must be filled correctly!');\r\n        };\r\n    };\r\n\r\n    return(\r\n        <div className=\"register-page-container\">\r\n            <HeaderComp/>\r\n\r\n            <main>\r\n                <div className=\"register\">\r\n                    <img alt=\"Register Logo\" src=\"https://images.unsplash.com/photo-1524245510371-a10ac6be9ec9?ixlib=rb-1.2.1&auto=format&fit=crop&w=675&q=80\" className=\"register-img\" />\r\n\r\n                    <form className=\"register-form\" onSubmit={handleSubmit(onSubmit)}>\r\n                        <h1 className=\"register-heading\">Register</h1>\r\n\r\n                        <label htmlFor=\"name\" className=\"register-label\">Name</label>\r\n                        <input type=\"text\" placeholder=\"Enter your name\" name=\"name\" id=\"name\" className=\"register-input\" \r\n                            ref={register({\r\n                                required: true\r\n                        })} />\r\n\r\n                        {(errors.name && errors.name.type === 'required') && <p>This is required</p>}\r\n                        \r\n                        <label htmlFor=\"username\" className=\"register-label\">Username</label>\r\n                        <input type=\"text\" placeholder=\"Enter your username\" name=\"username\" id=\"username\" className=\"register-input\" ref={register({\r\n                            required: true,\r\n                            minLength: 4\r\n                        })} />\r\n\r\n                        {(errors.username && errors.username.type === 'required') && <p>This is required</p>}\r\n                        {(errors.username && errors.username.type === 'minLength') && <p>The username don't must be less than 4 characters.</p>}\r\n\r\n                        <label htmlFor=\"email\" className=\"register-label\">Email address</label>\r\n                        <input type=\"email\" placeholder=\"Enter your email\" name=\"email\" id=\"email\" className=\"register-input\" ref={register({\r\n                            required: true,\r\n                            pattern: /^([a-z\\d\\.-]+)@([a-z\\d-]+)\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/\r\n                        })} />\r\n                        \r\n                        {(errors.email && errors.email.type === 'required') && <p>This is required</p>}\r\n                        {(errors.email && errors.email.type === 'pattern') && <p>The email address must contain the name, @ and the domain.</p>}\r\n\r\n                        <label htmlFor=\"password\" className=\"register-label\">Password</label>\r\n                        <input type=\"password\" placeholder=\"Enter your password\" name=\"password\" id=\"password\" className=\"register-input\" ref={register({\r\n                            required: true,\r\n                            pattern: /(?=(.*[0-9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{8,}$/\r\n                        })} />\r\n\r\n                        {(errors.password && errors.password.type === 'required') && <p>This is required</p>}\r\n                        {(errors.password && errors.password.type === 'pattern') && <p>Your password must contain 1 lowercase and 1 uppercase letter, and be at least 8 characters.</p>}\r\n\r\n                        <label htmlFor=\"confirmPassword\" className=\"register-label\">Confirm password</label>\r\n                        <input type=\"password\" placeholder=\"Confirm your password\" name=\"confirmPassword\" id=\"confirmPassword\" className=\"register-input\" ref={register} />\r\n\r\n                        <div className=\"register-checkbox-couple\">\r\n                            <input type=\"checkbox\" name=\"terms\" id=\"terms\" ref={register({required: true})} />\r\n                            <label htmlFor=\"terms\" className=\"register-label\">I accept the \r\n                                <a href=\"https://www.termsandconditionsgenerator.com/\" target=\"_blank\" rel=\"noopener noreferrer\"> Terms of Use </a> &\r\n                                <a rel=\"noopener noreferrer\" href=\"https://www.termsandconditionsgenerator.com/\" target=\"_blank\"> Privacy Policy.</a>\r\n                            </label>\r\n                        </div>\r\n\r\n                        {(errors.terms && errors.terms.type === 'required') && <p>This is required</p>}\r\n\r\n                        <div className=\"register-submit-couple\">\r\n                            <button type=\"submit\" className=\"register-submit\">Register</button>\r\n                            <span>or</span>\r\n                            <button className=\"login\">\r\n                                <Link to=\"/login\">Login</Link>\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RegisterPage;","import React, {useState} from 'react';\r\nimport HeaderComp from '../components/HeaderComp.js'\r\nimport '../scss/pages/LoginPage.scss';\r\nimport loginImage from '../images/user-image.png';\r\nimport { Link } from \"react-router-dom\";\r\nimport useForm from 'react-hook-form';\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers'));\r\n    \r\n    const onSubmit = (data) => {\r\n        if((registeredUsers.username === data.username) && (registeredUsers.password === data.password)) {\r\n            localStorage.setItem('authenticatedUsers', JSON.stringify(data));\r\n            localStorage.setItem('isAuthenticated', true);\r\n            localStorage.setItem('favorite', JSON.stringify([]));\r\n            alert('Congratulations! You are logged in!')\r\n            setTimeout(props.history.push('/'), 2000);\r\n         } else {\r\n            alert(\"Account doesn't exist!\")\r\n        }\r\n    };\r\n\r\n    return(        \r\n        <div className=\"login-page-container\">\r\n            <HeaderComp/>\r\n\r\n            <main>\r\n                <div className=\"login\">\r\n                    <img src={loginImage} className=\"login-image\" />\r\n                    \r\n                    <h1 className=\"login-heading\">Login</h1>\r\n\r\n                    <form className=\"login-form\" onSubmit={handleSubmit(onSubmit)}>\r\n                        <label htmlFor=\"username\" className=\"login-label\" >Username</label>\r\n                        <input name=\"username\" id=\"username\" type=\"text\" className=\"login-input\" placeholder=\"Enter your username\" ref={register({required: true})} />\r\n\r\n                        {(errors.username && errors.username.type === 'required') && <p>This is required</p>}\r\n\r\n                        <label htmlFor=\"password\" className=\"login-label\" >Password</label>\r\n                        <input name=\"password\" id=\"password\" type=\"password\" className=\"login-input\" placeholder=\"Enter your password\" ref={register({required: true})} />\r\n                        \r\n                        {(errors.password && errors.password.type === 'required') && <p>This is required</p>}\r\n\r\n                        <button type=\"submit\" className=\"login-btn\">Login</button>\r\n\r\n                        <div className=\"create-acc\">\r\n                            <span>Don't have an account?</span>\r\n                            <Link to=\"/register\">Create account</Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LoginPage;","import React, {useState} from 'react';\r\nimport HeaderComp from '../components/HeaderComp.js';\r\nimport '../scss/pages/FavoritePage.scss';\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faLink } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FavoritePage = () => {\r\n    const [favorite, setFavorite] = useState(JSON.parse(localStorage.getItem('favorite')));\r\n\r\n    const handleRemoveItem = (currentId) => {\r\n        favorite.forEach((item, key) => {\r\n            if(item.id === currentId) {\r\n                favorite.splice(key, 1);\r\n                localStorage.setItem('favorite', JSON.stringify(favorite));\r\n                setFavorite(JSON.parse(localStorage.getItem('favorite')));\r\n            };\r\n        });\r\n    };\r\n\r\n    const displayFavorite = favorite.map((item, index) => {\r\n        return(\r\n            <div key={index} className=\"favorite-item\">\r\n                <Link to={`/movie/${item.id}`}>\r\n                    <img src={`${item.imgURL}${item.poster_path}`} className=\"favorite-img\" />\r\n                </Link>\r\n                \r\n                <div className=\"favorite-right-side\">\r\n                    <div className=\"favorite-inline-items\">\r\n                        <OverlayTrigger\r\n                            placement='bottom'\r\n                            overlay={<Tooltip id='tooltip-user-score'>User score</Tooltip>}\r\n                        >\r\n                            <div>\r\n                                <CircularProgressbar value={`${item.vote_average * 10}`} text={`${item.vote_average * 10}%`} className=\"favorite-score\" />\r\n                            </div>\r\n                        </OverlayTrigger>      \r\n\r\n                        <span className=\"favorite-title\">{item.title}</span>\r\n\r\n                        <span className=\"favorite-release-date\">{item.release_date}</span>\r\n                    </div>\r\n\r\n                    <span>{item.overview}</span>\r\n\r\n                    <div className=\"favorite-buttons\">\r\n                        <OverlayTrigger\r\n                            placement='bottom'\r\n                            overlay={<Tooltip id='tooltip-remove-item'>Remove from favorite </Tooltip>}\r\n                        >\r\n                            <button className=\"favorite-remove-item\" onClick={handleRemoveItem.bind(this, item.id)}>\r\n                                <FontAwesomeIcon icon={faTimes} className=\"icons\" />\r\n                            </button>\r\n                        </OverlayTrigger>\r\n\r\n                        <OverlayTrigger\r\n                            placement='bottom'\r\n                            overlay={<Tooltip>Go to official site</Tooltip>}\r\n                        >\r\n                            <a href={item.homepage} target=\"_blank\" className=\"favorite-homepage\" rel=\"noopener noreferrer\">\r\n                                <FontAwesomeIcon icon={faLink} className=\"icons\" />\r\n                            </a>\r\n                        </OverlayTrigger>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return(\r\n        <div className=\"favorite-page\">\r\n            <HeaderComp/>\r\n\r\n            <main className=\"favorite\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"favorite-heading\">Favorite films and tv shows</h1>\r\n                    {displayFavorite}\r\n                    <div className=\"favorite-line\"></div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FavoritePage;","import React from 'react';\r\nimport '../src/scss/base/_reset.scss';\r\nimport HomePage from './pages/HomePage.js';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AllNowPlayingMoviesPage from './pages/AllNowPlayingMoviesPage.js';\r\nimport AllTopRatedMoviesPage from './pages/AllTopRatedMoviesPage.js';\r\nimport AllPopularMoviesPage from './pages/AllPopularMoviesPage.js';\r\nimport AllPopularTvShowsPage from './pages/AllPopularTvShowsPage.js';\r\nimport AllTopRatedTvShowsPage from './pages/AllTopRatedTvShowsPage.js';\r\nimport AllOnTheAirTvShowsPage from './pages/AllOnTheAirTvShowsPage.js';\r\nimport MoreInfoForEachMoviePage from './pages/MoreInfoForEachMoviePage.js';\r\nimport MoreInfoForEachTvShowPage from './pages/MoreInfoForEachTvShowPage.js';\r\nimport SpecialPersonPage from './pages/SpecialPersonPage.js';\r\nimport RegisterPage from './pages/RegisterPage.js';\r\nimport LoginPage from './pages/LoginPage.js';\r\nimport FavoritePage from './pages/FavoritePage.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Router>\r\n          <Switch> \r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route path=\"/category/now-playing-movies\" component={AllNowPlayingMoviesPage} />\r\n            <Route path=\"/category/top-rated-movies\" component={AllTopRatedMoviesPage} />\r\n            <Route path=\"/category/popular-movies\" component={AllPopularMoviesPage} />\r\n            <Route path=\"/category/popular-tv-shows\" component={AllPopularTvShowsPage} />\r\n            <Route path=\"/category/top-rated-tv-shows\" component={AllTopRatedTvShowsPage} />\r\n            <Route path=\"/category/on-the-air-tv-shows\" component={AllOnTheAirTvShowsPage} />\r\n            <Route path=\"/movie/:id\" component={MoreInfoForEachMoviePage} />\r\n            <Route path=\"/tv-show/:id\" component={MoreInfoForEachTvShowPage} />\r\n            <Route path=\"/person/:id\" component={SpecialPersonPage} />\r\n            <Route path=\"/register/\" component={RegisterPage} />\r\n            <Route path=\"/login\" component={LoginPage} />\r\n            <Route path=\"/user/favorite\" component={FavoritePage} />\r\n          </Switch>\r\n        </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/user-image.832eefcf.png\";"],"sourceRoot":""}